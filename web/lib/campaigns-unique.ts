// üîß –ü–æ—Å—Ç–∞–≤ –¶–ï–ô —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ó–ê–ú–Ü–°–¢–¨ –±–ª–æ–∫—É, –¥–µ –∑–∞—Ä–∞–∑ —Ä–∞—Ö—É—î—Ç—å—Å—è `msg` –∑ `res.conflicts`.
// –¢–æ–±—Ç–æ –∑–∞–º—ñ–Ω–∏ –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ —Ä—è–¥–∫–∞ –∑:
//   const msg = "Variant values must be unique across campaigns. Conflicts: " + res.conflicts
// —ñ –¥–æ –∫—ñ–Ω—Ü—è .map(...).join('; ')
//
// –ë–µ–∑–ø–µ—á–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç (—Ç–∏–ø–æ–±–µ–∑–ø–µ—á–Ω–∏–π —ñ –Ω–µ –ª–∞–º–∞—î —ñ—Å–Ω—É—é—á—É –ª–æ–≥—ñ–∫—É):

const conflicts =
  (res as any)?.conflicts as
    | Array<{ which: string; value: string; campaignId: string | number }>
    | undefined;

const msg =
  'Variant values must be unique across campaigns. Conflicts: ' +
  (conflicts && conflicts.length
    ? conflicts
        .map(
          (c) =>
            `[${c.which}] "${c.value}" already used in campaign ${c.campaignId}`
        )
        .join('; ')
    : 'none');
